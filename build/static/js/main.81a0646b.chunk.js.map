{"version":3,"sources":["components/Header.js","components/Form.js","helper.js","components/Resumen.js","components/Resultado.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","titulo","Form","marcaRef","React","createRef","yearRef","planBasicoRef","planCompletoRef","cotizarSeguro","e","preventDefault","plan","_this","current","checked","obj","marca","value","year","onSubmit","this","htmlFor","name","id","ref","type","Component","obtenerDiferenciaAnio","Date","getFullYear","calcularMarca","modelo","incremento","obtenerPlan","primeraMayuscula","texto","charAt","toUpperCase","slice","Resumen","mostrarResumen","_this$props$datos","datos","Resultado","mostrarResultado","res","mensaje","react_transition_group","component","classNames","key","timeout","enter","exit","Fragment","App","state","parseFloat","toFixed","auto","setState","components_Header","components_Form","components_Resumen","components_Resultado","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.81a0646b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => {\n    return(\n        <header className=\"top\">\n            <h1>{props.titulo}</h1>\n        </header>\n    )\n};\n\nexport default Header;","import React, {Component} from 'react';\n\nclass Form extends Component {\n\n    marcaRef = React.createRef();\n    yearRef  = React.createRef();\n    planBasicoRef   = React.createRef();\n    planCompletoRef = React.createRef();\n\n    cotizarSeguro = (e) => {\n        e.preventDefault();\n        const plan = this.planBasicoRef.current.checked ? 'basico' : 'completo';\n        const obj = {\n            marca: this.marcaRef.current.value,\n            year : this.yearRef.current.value,\n            plan : plan\n        };\n        this.props.cotizarSeguro(obj);\n        // Resetear Form optional\n        //e.currentTarget.reset();\n    };\n\n    render(){\n        return(\n            <form className=\"cotizar-auto\" onSubmit={this.cotizarSeguro}>\n                <div className=\"campo\">\n                    <label htmlFor=\"marca\">Marca</label>\n                    <select name=\"marca\" id=\"marca\" ref={this.marcaRef}>\n                        <option value=\"americano\">Americano</option>\n                        <option value=\"europeo\">Europeo</option>\n                        <option value=\"asiatico\">Asiatico</option>\n                    </select>\n                </div>\n\n                <div className=\"campo\">\n                    <label htmlFor=\"year\">Año</label>\n                    <select name=\"year\" id=\"year\" ref={this.yearRef}>\n                        <option value=\"2019\">2019</option>\n                        <option value=\"2018\">2018</option>\n                        <option value=\"2017\">2017</option>\n                        <option value=\"2016\">2016</option>\n                        <option value=\"2015\">2015</option>\n                        <option value=\"2014\">2014</option>\n                        <option value=\"2013\">2013</option>\n                        <option value=\"2012\">2012</option>\n                        <option value=\"2011\">2011</option>\n                        <option value=\"2010\">2010</option>\n                    </select>\n                </div>\n\n                <div className=\"campo\">\n                    <label htmlFor=\"plan\">Plan</label>\n                    <input type=\"radio\" name=\"plan\" value=\"Básico\" ref={this.planBasicoRef} /> Básico\n                    <input type=\"radio\" name=\"plan\" value=\"Completo\" ref={this.planCompletoRef} /> Completo\n                </div>\n\n                <button type=\"submit\" className=\"boton\">Cotizar</button>\n            </form>\n        )\n    }\n}\n\nexport default Form;","export const obtenerDiferenciaAnio = (year) => {\n    return new Date().getFullYear() - year;\n};\n\nexport const calcularMarca = ( modelo ) => {\n    let incremento;\n\n    switch (modelo) {\n        case 'europeo':\n            incremento = 1.30;\n            break;\n        case 'americano':\n            incremento = 1.15;\n            break;\n        case 'asiatico':\n            incremento = 1.05;\n            break;\n        default:\n            break;\n    }\n\n    return incremento;\n};\n\nexport const obtenerPlan = ( plan ) => {\n    return (plan === 'basico') ? 1.20 : 1.50;\n};\n\nexport const primeraMayuscula = (texto) => {\n    return texto.charAt(0).toUpperCase() + texto.slice(1);\n};","import React, {Component} from 'react';\nimport {primeraMayuscula} from '../helper';\n\nclass Resumen extends Component {\n    // View Resumen\n    mostrarResumen = () => {\n        const {marca, year, plan} = this.props.datos;\n        if (!marca || !year || !plan) return null;\n        return(\n            <div className=\"resumen\">\n                <h2>Resumen de la cotización</h2>\n                <li>Marca: {primeraMayuscula(marca)}</li>\n                <li>Año: {year}</li>\n                <li>Plan: {primeraMayuscula(plan)}</li>\n            </div>\n        )\n    };\n\n    // Render Method\n    render(){\n        return(\n            <div>\n                {this.mostrarResumen()}\n            </div>\n        )\n    }\n}\n\nexport default Resumen;","import React, {Component} from 'react';\nimport {TransitionGroup, CSSTransition } from 'react-transition-group';\n\nclass Resultado extends Component {\n\n    mostrarResultado = () => {\n        const res = this.props.res;\n        const mensaje = (!res)? 'Elige una marca, año y plan.': 'El resultado es $';\n        return(\n            <div className=\"gran-total\">\n                {mensaje}\n                <TransitionGroup component=\"span\" className=\"resultado\">\n                    <CSSTransition classNames=\"resultado\" key={res} timeout={{enter:500, exit:500}} >\n                        <span>{res}</span>\n                    </CSSTransition>\n                </TransitionGroup>\n            </div>\n        )\n    };\n\n    // Render Method\n    render(){\n        return(\n            <React.Fragment>\n            {this.mostrarResultado()}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Resultado;","import React, { Component } from 'react';\n\nimport Header from './Header';\nimport Form from './Form';\nimport Resumen from './Resumen';\nimport Resultado from './Resultado';\n\nimport {obtenerDiferenciaAnio, calcularMarca, obtenerPlan } from '../helper';\n\nclass App extends Component {\n    // State\n    state = {\n        res: '',\n        datos: {}\n    };\n\n    // Cotizar Method\n    cotizarSeguro = (obj) => {\n        let res = 2000;\n        const {marca, year, plan} = obj;\n        const diferencia = obtenerDiferenciaAnio(year);\n        res -= (res*diferencia*3)/100;\n        res = calcularMarca(marca)*res;\n        let incremento = obtenerPlan(plan);\n        res = parseFloat(res*incremento).toFixed(2);\n        let auto = {\n            marca: marca,\n            year : year,\n            plan : plan\n        };\n        this.setState({\n            res  : res,\n            datos: auto\n        });\n    };\n\n    // Render Method\n    render() {\n        return (\n            <div className=\"contenedor\">\n                <Header titulo=\"Cotizador de Seguro de Autos\" />\n                <div className=\"contenedor-formulario\">\n                    <Form cotizarSeguro={this.cotizarSeguro} />\n                    <Resumen\n                        datos={this.state.datos}\n                    />\n                    <Resultado res={this.state.res} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './css/index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}